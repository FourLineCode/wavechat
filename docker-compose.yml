version: "3.8"

services:
    # Traefik reverse proxy for local domains + load balancing
    traefik:
        container_name: wc-traefik
        image: traefik:v2.5
        command:
            - --api.insecure=true
            - --providers.docker=true
            - --providers.docker.exposedbydefault=false
            - --entrypoints.wave.address=:80
        ports:
            - 80:80
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - wave

    # Local AWS simulation container
    localstack:
        container_name: wc-localstack
        image: localstack/localstack:0.12.20
        ports:
            - 4566:4566
        volumes:
            - ./.localstack:/tmp/localstack
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - wave
        environment:
            - SERVICES=s3
            - DEBUG=1
            - DATA_DIR=/tmp/localstack/data
        labels:
            - traefik.enable=true
            - traefik.http.routers.localstack.entrypoints=wave
            # Routes prefixed with specific routes gets forwarded to localstack
            - traefik.http.routers.localstack.rule=Host(`cdn.wavechat.localhost`)

    # PostgreSQL database container
    postgres:
        container_name: wc-postgres
        image: postgres:13-alpine
        ports:
            - 5432:5432
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - wave
        environment:
            # Database name
            POSTGRES_DB: wavechat
            # Database password
            POSTGRES_PASSWORD: pgadmin

    # Redis server for pub-sub
    redis:
        container_name: wc-redis
        image: redis:alpine
        networks:
            - wave

    # WaveChat Api container (Backend)
    api:
        container_name: wc-api
        build:
            context: .
            dockerfile: ./api/Dockerfile
            target: development
        user: $UID:$GID
        volumes:
            - .:/app:rw
        networks:
            - wave
        depends_on:
            - traefik
            - postgres
            - redis
        labels:
            - traefik.enable=true
            - traefik.http.routers.api.entrypoints=wave
            # Web route prefixed with specific routes gets forwarded to api
            - traefik.http.routers.api.rule=Host(`wavechat.localhost`) &&
              PathPrefix(`/graphql`)

    # WaveChat Chat service container
    rtc:
        container_name: wc-rtc
        build:
            context: .
            dockerfile: ./rtc/Dockerfile
            target: development
        user: $UID:$GID
        volumes:
            - .:/app:rw
        networks:
            - wave
        depends_on:
            - traefik
            - postgres
            - redis
            - api
        labels:
            - traefik.enable=true
            - traefik.http.routers.rtc.entrypoints=wave
            # Adds sticky session cookie to persist connection through reverse proxy
            - traefik.http.services.rtc.loadbalancer.sticky=true
            - traefik.http.services.rtc.loadbalancer.sticky.cookie.name=sticky-session
            - traefik.http.services.rtc.loadbalancer.sticky.cookie.httpOnly=true
            - traefik.http.services.rtc.loadbalancer.sticky.cookie.secure=true
            # Web route prefixed with specific routes gets forwarded to rtc
            - traefik.http.routers.rtc.rule=Host(`wavechat.localhost`) &&
              PathPrefix(`/ws`)

    # WaveChat Web app container (Frontend)
    web:
        container_name: wc-web
        build:
            context: .
            dockerfile: ./web/Dockerfile
            target: development
        user: $UID:$GID
        volumes:
            - .:/app:rw
        networks:
            - wave
        depends_on:
            - traefik
            - postgres
            - redis
            - api
            - rtc
        labels:
            - traefik.enable=true
            - traefik.http.routers.web.entrypoints=wave
            # Web route other than api routes gets forwarded to api
            - traefik.http.routers.web.rule=Host(`wavechat.localhost`)

    # Codegen - GraphQL code generator for ApolloClient (Frontend)
    codegen:
        container_name: wc-codegen
        build:
            context: .
            dockerfile: ./web/Dockerfile
            target: development
        user: $UID:$GID
        command: pnpm codegen
        volumes:
            - .:/app:rw
        networks:
            - wave
        depends_on:
            - traefik
            - postgres
            - redis
            - api
            - rtc
            - web

# Volume for PostgreSQL database to persist data between development sessions
volumes:
    pgdata: {}

# Defalut networks
networks:
    wave:
        external: true
