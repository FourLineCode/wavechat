version: '3.8'

services:
    # traefik:
    #     container_name: traefik
    #     image: traefik:latest
    #     command:
    #         - --api.insecure=true
    #         - --providers.docker=true
    #     volumes:
    #         - '/var/run/docker.sock:/var/run/docker.sock'
    #     labels:
    #         - 'traefik.enable=true'
    #     ports:
    #         - '80:80'
    #         - '443:443'
    #         - '8080:8080'

    postgres:
        container_name: postgres
        image: postgres:latest
        restart: always
        ports:
            - '5432:5432'
        volumes:
            - 'pgdata:/var/lib/postgresql/data'
        environment:
            POSTGRES_DB: wavechat
            POSTGRES_PASSWORD: pgadmin

    server:
        container_name: server
        image: node:latest
        working_dir: /app/server
        restart: always
        env_file:
            - server/.env
        command: npm run dev --prefix server
        volumes:
            - .:/app/server:rw
        ports:
            - '5000:5000'
            - '5001:5001'
        depends_on:
            - postgres
        # labels:
        #     - 'traefik.http.routers.server.rule=Host(`wavechat.server`)'

    client:
        container_name: client
        image: node:latest
        working_dir: /app/client
        restart: always
        command: npm run dev --prefix client
        volumes:
            - .:/app/client:rw
        ports:
            - '3000:3000'
        depends_on:
            - postgres
            - server
        # labels:
        #     - 'traefik.http.routers.client.rule=Host(`wavechat.client`)'

volumes:
    pgdata: {}
