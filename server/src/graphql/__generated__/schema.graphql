type AuthResult {
  success: Boolean!
  user: User!
}

scalar Date

type Mutation {
  """Sign in user"""
  signin(input: SigninInput!): AuthResult!

  """Sign out user"""
  signout: SuccessResult!

  """Sign up new user"""
  signup(input: SignupInput!): AuthResult!
}

type Query {
  """returns all users"""
  getAllUsers: [User!]!
  hello(name: String): String!
}

type Session {
  createdAt: Date!
  id: ID!
  updatedAt: Date!
  user: User!
  userId: ID!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  department: String
  email: String!
  password: String!
  semester: Int
  university: String
  username: String!
}

type SuccessResult {
  success: Boolean!
}

type User {
  avatarUrl: String
  createdAt: Date!
  department: String
  displayName: String!
  email: String!
  id: ID!
  role: String!
  semester: Int
  sessions: [Session!]!
  university: String
  updatedAt: Date!
  username: String!
}
